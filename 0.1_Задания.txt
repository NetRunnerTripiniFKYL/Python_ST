Работаем с этим словарем в заданиях 1-5 (скопируй его себе) (Все задания надо выполнять используя только пройденные темы!!!!!!!!!!!!!!!!!).upper()

owners_NR = {
    "Trip": {
        "location": "Russia",
        "sex": "Men",
        "model_pc/laptop": "Laptop",
        "ip": "130.255.034.13"
    },
    "Kerb": {
        "location": "Russia",
        "sex": "Men",
        "model_pc/laptop": "Laptop",
        "ip": "130.255.06642"
    },
    "Don": {
        "location": "Kazakstan",
        "sex": "Men",
        "model_pc/laptop": "PC",
        "ip": "160.255.023.101"
    }
}

---------------------------------------------------------------------- Задание 1 ----------------------------------------------------------------------

Необходимо запросить у пользователя ввод (Trip или Kerb или Don). 
И вывести информацию (информация будет в виде словаря)

Пример выполнения скрипта :

python -file-.py
Введите имя человека: Trip
Вывод : {"location": "Russia", "sex": "Men", "model_pc/laptop": "Laptop", "ip": "130.255.034.13"}

---------------------------------------------------------------------- Задание 2 ----------------------------------------------------------------------

Переделать скрипт из задания 1 таким образом, чтобы, кроме имени, запрашивался также параметр, который нужно отобразить (sex или ip к примеру).
Вывести информацию.

Пример выполнения скрипта :

python -file-.py
Введите имя человека: Trip
Введите имя параметра: ip
Вывод : 130.255.034.13

---------------------------------------------------------------------- Задание 3 ----------------------------------------------------------------------

Переделать скрипт из задания 2 таким образом, чтобы, при запросе параметра, отображался список возможных параметров. 
Список параметров надо получить из словаря, а не прописывать вручную.
Вывести информацию о соответствующем параметре.

Пример выполнения скрипта :

python -file-.py
Введите имя человека: Trip
Введите имя параметра (location, sex, model_pc, ip): ip
Вывод : 130.255.034.13

---------------------------------------------------------------------- Задание 4 ----------------------------------------------------------------------

Переделать скрипт из задания 3 таким образом, чтобы, при запросе параметра, которого нет в словаре, отображалось сообщение "Такого параметра нет". 
Задание относится только к параметрам, не к самим людям.

Пример выполнения скрипта:

python -file-.py
Введите имя человека: Trip
Введите имя параметра (location, sex, model_pc, ip): dick_size
Вывод : Такого параметра нет

---------------------------------------------------------------------- Задание 5 ----------------------------------------------------------------------

Переделать скрипт из задания 4 таким образом, чтобы, при запросе параметра, пользователь мог вводить название параметра в любом регистре.

Пример выполнения скрипта:

python -file-.py
Введите имя человека: Trip
Введите имя параметра (location, sex, model_pc, ip): IP
Вывод : 130.255.034.13

---------------------------------------------------------------------- Задание 6 ----------------------------------------------------------------------

Запросить у пользователя ввод IP-сети в формате: 10.1.1.0/24

Затем вывести информацию о сети и маске в таком формате:

Network:
10        1         1         0
00001010  00000001  00000001  00000000

Mask:
/24
255       255       255       0
11111111  11111111  11111111  00000000

Проверить работу скрипта на разных комбинациях сеть/маска.

Подсказка: Получить маску в двоичном формате можно так:

"1" * 28 + "0" * 4
"11111111111111111111111111110000"

---------------------------------------------------------------------- Задание 7 ----------------------------------------------------------------------

Всё, как в задании 6, но, если пользователь ввел адрес хоста, а не адрес сети, надо преобразовать адрес хоста в адрес сети и вывести адрес сети и маску, как в задании 6.

Пример адреса сети (все биты хостовой части равны нулю):

10.0.1.0/24

190.1.0.0/16

Пример адреса хоста:

10.0.1.1/24 - хост из сети 10.0.1.0/24

10.095/28 - хост из сети 10.092/28

Если пользователь ввел адрес 10.0.1.1/24, вывод должен быть таким:

Network:
10        0         1         0
00001010  00000000  00000001  00000000

Mask:
/24
255       255       255       0
11111111  11111111  11111111  00000000

Проверить работу скрипта на разных комбинациях хост/маска, например: 10.095/28, 10.0.1.1/24

Подсказка:

Есть адрес хоста в двоичном формате и маска сети 28. Адрес сети это первые 28 бит адреса хоста + 4 ноля. 
То есть, например, адрес хоста 10.1.1.195/28 в двоичном формате будет bin_ip = "00001010000000010000000111000011".

А адрес сети будет первых 28 символов из bin_ip + 0000 (4 потому что всего в адресе может быть 32 бита, а 32 - 28 = 4): 00001010000000010000000111000000

---------------------------------------------------------------------- Задание 8 ----------------------------------------------------------------------

Скрипт должен запрашивать у пользователя:

    информацию о режиме интерфейса (access/trunk)

    номере интерфейса (тип и номер, вида Gi0/3)

    номер VLANа (для режима trunk будет вводиться список VLANов)

В зависимости от выбранного режима, на стандартный поток вывода, должна возвращаться соответствующая конфигурация access или trunk 
(шаблоны команд находятся в списках access_template и trunk_template).
При этом, сначала должна идти строка interface и подставлен номер интерфейса, а затем соответствующий шаблон, в который подставлен номер VLANа (или список VLANов).

Подсказка: Подводящим к этому заданию было задание 1. 
Чтобы было легче решить это задание, можно посмотреть на задание 1 и разобраться как там получилось вывести разную информацию в зависимости от ввода пользователя.

Ниже примеры выполнения скрипта, чтобы было проще понять задачу.

Пример выполнения скрипта, при выборе режима access:

$ python -file-.py
Введите режим работы интерфейса (access/trunk): access
Введите тип и номер интерфейса: Fa0/6
Введите номер влан(ов): 3

interface Fa0/6
switchport mode access
switchport access vlan 3
switchport nonegotiate
spanning-tree portfast
spanning-tree bpduguard enable

Пример выполнения скрипта, при выборе режима trunk:

$ python -file-.py
Введите режим работы интерфейса (access/trunk): trunk
Введите тип и номер интерфейса: Fa0/7
Введите номер влан(ов): 2,3,4,5

interface Fa0/7
switchport trunk encapsulation dot1q
switchport mode trunk
switchport trunk allowed vlan 2,3,4,5

-----Списки-----

access_template = [
    "switchport mode access", "switchport access vlan {}",
    "switchport nonegotiate", "spanning-tree portfast",
    "spanning-tree bpduguard enable"
]

trunk_template = [
    "switchport trunk encapsulation dot1q", "switchport mode trunk",
    "switchport trunk allowed vlan {}"
]

---------------------------------------------------------------------- Задание 9 ----------------------------------------------------------------------

Дополнить скрипт из задания 8 таким образом, чтобы, в зависимости от выбранного режима, задавались разные вопросы в запросе о номере VLANа или списка VLANов:

    для access: «Введите номер VLAN:»

    для trunk: «Введите разрешенные VLANы:» 