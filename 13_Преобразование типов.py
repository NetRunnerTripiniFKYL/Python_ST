a = "500_000"
print (f"#1 \nВывод: {int(a)} \n") #int преобразует строку в int

print ("#2 \nВывод: " + str(int("11111111", 2)) + "\n") #С помощью функции int можно преобразовать и число в двоичной записи в десятичную (двоичная запись должна быть в виде строки)

print (f"#3 \nВывод: {bin(500_001)} \n") #Преобразовать десятичное число в двоичный формат можно с помощью bin

print (f"#4 \nВывод: {hex(10)} \n") #Аналогичная функция есть и для преобразования в шестнадцатеричный формат

print ("#5 \nВывод: " + str(list("string")) + "\n") #Функция list преобразует аргумент в список
print (f"#6 \nВывод: {list({1, 2, 3})} \n")
print (f"#7 \nВывод: {list((1, 2, 3, 4))} \n")

print (f"#8 \nВывод: {set([1, 2, 3, 3, 4, 4, 4, 4])} \n") #Функция set преобразует аргумент в множество
print (f"#9 \nВывод: {set((1, 2, 3, 3, 4, 4, 4, 4))} \n")
print ("#10 \nВывод: " + str(set("string string")) + "\n")

print (f"#11 \nВывод: {tuple([1, 2, 3, 4])} \n") #Функция tuple преобразует аргумент в кортеж
print (f"#12 \nВывод: {tuple({1, 2, 3, 4})} \n")
print ("#13 \nВывод: " + str(tuple("string")) + "\n") 

print (f"#14 \nВывод: {str(10)} \n") #Функция str преобразует аргумент в строку